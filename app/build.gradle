/*
 * MIT License
 * Copyright (c) 2021.
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * This project was submitted by Tarek Bohdima as part of the Android Developer
 * Nanodegree At Udacity.
 * As part of Udacity Honor code, your submissions must be your own work, hence
 * submitting this project as yours will cause you to break the Udacity Honor Code
 * and the suspension of your account.
 * I, the author of the project, allow you to check the code as a reference, but if you
 * submit it, it's your own responsibility if you get expelled.
 */

plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.bakingapp"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding true
        // for view binding:
        viewBinding true
    }
}

dependencies {

    def recyclerview_version = "1.2.0"
    def material_version = "1.3.0"
    def coordinatorlayout_version = "1.1.0"
    def cardview_version = "1.0.0"
    def timber_version = "4.7.1"
    def Glide_version = "4.11.0"
    def retrofit_version = "2.9.0"
    def okhttp_version = "4.9.0"
    def rx_java3_version = "3.0.7"
    def rx_android_version = "3.0.0"
    def rx_java3_adapter_version = "2.9.0"
    def lifecycle_version = "2.3.1"
    def room_version = "2.2.6"
    def dagger_version = "2.34.1"
    def exoplayer_version = "2.13.3"
    def fragment_version = "1.3.2"
    def androidxAnnotationVersion = "1.2.0"
    def guavaVersion = "29.0-android"
    def coreVersion = "1.1.0"
    def extJUnitVersion = "1.1.2"
    def runnerVersion = "1.3.0"
    def espressoVersion = "3.3.0"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "androidx.annotation:annotation:$androidxAnnotationVersion"
    implementation "com.google.guava:guava:$guavaVersion"

    // Core library
    androidTestImplementation "androidx.test:core:$coreVersion"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$runnerVersion"
    androidTestImplementation "androidx.test:rules:$runnerVersion"

    testImplementation 'junit:junit:4.13.2'

    // Assertions
    androidTestImplementation "androidx.test.ext:junit:$extJUnitVersion"

    // Espresso dependencies
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"

    // Timber
    implementation "com.jakewharton.timber:timber:$timber_version"
    // Glide
    implementation "com.github.bumptech.glide:glide:$Glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$Glide_version"
    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$coordinatorlayout_version"
    implementation "androidx.cardview:cardview:$cardview_version"
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    // RX Java + RX Android
    implementation "io.reactivex.rxjava3:rxandroid:$rx_android_version"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 3.x.x version)
    implementation "io.reactivex.rxjava3:rxjava:$rx_java3_version"

    // RX Java3 adapter for Retrofit 2.9.0 Credits to
    //https://stackoverflow.com/a/62263180/8899344
    //https://github.com/square/retrofit/blob/master/CHANGELOG.md#version-290-2020-05-20
    implementation "com.squareup.retrofit2:adapter-rxjava3:$rx_java3_adapter_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // Annotation processor
//    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    // Exoplayer
    implementation "com.google.android.exoplayer:exoplayer:$exoplayer_version"

    // Base implementation with a standard SeekBar
    implementation 'com.github.rubensousa:previewseekbar:3.0.0'

    // ExoPlayer extension that contains a TimeBar.
    // Grab this one if you're going to integrate with ExoPlayer
    implementation 'com.github.rubensousa:previewseekbar-exoplayer:2.11.4.0'

    // Fragment
    implementation "androidx.fragment:fragment:$fragment_version"
}